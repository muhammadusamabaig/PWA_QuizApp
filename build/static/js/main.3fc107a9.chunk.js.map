{"version":3,"sources":["serviceWorker.ts","Service_provider.ts","QuestionCard.tsx","InfoForm.tsx","index.tsx","ResultCard.tsx"],"names":["isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","config","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","state","controller","console","log","onUpdate","onSuccess","catch","error","getquiz","quantity","level","a","fetch","fetc","json","results","shuffuleArray","array","sort","Math","random","getQuizSpecificData","map","item","question","answer","correct_answer","options","incorrect_answers","concat","tempglobal","InfoForm","useState","numstate","setnumstate","levelstate","setlevelstate","QuestionNoSelection","e","parseInt","target","value","FetchData","assign","alert","className","style","backgroundColor","height","width","paddingTop","overflow","fontFamily","color","type","onChange","borderBottom","borderTop","borderLeft","borderRight","placeholder","marginTop","onClick","border","fontSize","ReactDOM","render","StrictMode","exact","path","component","props","Questions","arra","setarra","detectmarks","setdetectmarks","incremarks","setincremarks","ResultButtonOpacity","setResultButtonOpacity","params","number","progress","setprogress","mcqsendsate","setmcqsendsate","index","setindex","Detection","selectitem","useEffect","get","dosome","progressInstance","ProgressBar","variant","now","QuestionIncrement","key","borderRadius","marginLeft","paddingBottom","disabled","checked","opacity","fontWeight","letterSpacing","failed","totalvalue","ObtainedMarks","obtainedvalue","calculate","wordSpacing","toFixed","document","getElementById","URL","process","href","origin","addEventListener","headers","response","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker"],"mappings":"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","file":"static/js/main.3fc107a9.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\ntype Config = {\r\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\r\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\r\n};\r\n\r\nexport function register(config?: Config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(\r\n      process.env.PUBLIC_URL,\r\n      window.location.href\r\n    );\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl: string, config?: Config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' }\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import {quizObjectDataType} from './Userproperties'\r\nimport {getSpecificData} from './Userproperties'\r\n\r\nexport const getquiz=async (quantity : number, level : string)=>{\r\n    const fetc =await fetch(`https://opentdb.com/api.php?amount=${quantity}&difficulty=${level}`)\r\n    let {results}  = await fetc.json()\r\n    const shuffuleArray=(array:any[])=>{\r\n        const result : any[]=[...array].sort(()=>Math.random()-0.5)\r\n    \r\n    return(result)\r\n    }\r\nconst getQuizSpecificData:getSpecificData[]=results.map((item : quizObjectDataType)=>{\r\nreturn{\r\n    question:item.question,\r\n    answer: item.correct_answer,\r\n    options:shuffuleArray( item.incorrect_answers.concat(item.correct_answer))\r\n}\r\n\r\n})\r\nreturn(getQuizSpecificData)\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport ProgressBar from 'react-bootstrap/ProgressBar'\r\nimport {getquiz} from './Service_provider'\r\n\r\nimport { getSpecificData } from './Userproperties'\r\nlet tempglobal=1\r\nexport const QuestionCard =(props:any)=> {\r\n  // var temparrr:getSpecificData[] =[{question:\"\",answer:\"\",options:['jkdjdk','','','']}]\r\n  const [arra,setarra] =useState<getSpecificData[]>([{question:\"\",answer:\"\",options:['loading','loading','loading','loading']}])\r\n  const  [detectmarks,setdetectmarks]=useState<number>(0)\r\n  const  [incremarks,setincremarks]=useState<number>(0)\r\n\r\n  const  [ResultButtonOpacity,setResultButtonOpacity]=useState<number>(0)\r\n\r\n  var a=100/parseInt(props.match.params.number)\r\n  const  [progress,setprogress]=useState<number>(0)\r\n  // const  [Initialmcqsendsate,setInitialmcqsendsate]=useState<boolean>(true)\r\n\r\n  const  [mcqsendsate,setmcqsendsate]=useState<boolean>(false)\r\n  let Questions :getSpecificData[]\r\nconst [index,setindex]=useState<number>(0)\r\nuseEffect(()=>{\r\n async function dosome(){\r\n await get()\r\n}\r\ndosome()\r\n})\r\n\r\n  function Detection(selectitem:string){\r\n    if(arra[index].answer===selectitem){\r\nsetincremarks(incremarks+1)\r\nconsole.log(incremarks)\r\n\r\n    }\r\n    else{\r\n     setdetectmarks( detectmarks-1)\r\n     console.log(detectmarks)\r\n    }\r\n  }\r\n  \r\n  const progressInstance = <ProgressBar variant=\"info\" now={progress} />;\r\n\r\n\r\n  function QuestionIncrement(){\r\n    setprogress(progress+a)\r\n\r\n    if(index<parseInt(props.match.params.number)-1){\r\n    setindex(index+1)\r\n    \r\n  }\r\n  else{\r\n    setmcqsendsate(true)\r\n    setResultButtonOpacity(1)\r\n  }\r\n}\r\nvar  get= async()=>{\r\n\r\n   Questions = await getquiz(parseInt( props.match.params.number), props.match.params.level)\r\n// let temp:getSpecificData[]=Questions\r\n//    temparrr=temp\r\n//    setarra(temparrr)\r\n//    console.log(temp,Questions)\r\nif(tempglobal===1){\r\n  setarra(Questions)\r\n}\r\ntempglobal++\r\n}\r\nconsole.log(arra)\r\nreturn (\r\n  <div className=\"DesignCard\" style={{height:\"100vh\",width:\"100%\",overflow:\"hidden\"}}>\r\n<div >\r\n{progressInstance}\r\n</div>\r\n    <div className=\"container\"> \r\n<div className=\"row text-left\" style={{marginTop:\"5%\"}}>\r\n<h3 className=\"col-12\" style={{color:\"white\"}}>Question:{index+1}</h3>\r\n\r\n</div>\r\n    <div style={{paddingTop:\"2%\"}} className=\"row\">\r\n<h5 className=\"col-12\" style={{color:\"white\"}}>{arra[index].question}</h5>\r\n    </div>\r\n    {\r\n      arra[index].options.map((item,index)=>{\r\n        return( <div key={index} className=\"row \" style={{borderRadius:\"14%\"}}>\r\n        <h6 className=\"col-12 \"   style={{backgroundColor:\"#E334C0\",marginLeft:\"1%\", paddingTop:\"2%\",paddingBottom:\"2%\" ,color:\"white\"}}>\r\n          <input disabled={mcqsendsate }   checked={false}  onChange={()=>{console.log(QuestionIncrement() ,Detection(item) )}}  type=\"radio\"/> {item}\r\n          </h6>\r\n      </div>)\r\n       \r\n\r\n      })\r\n    }\r\n       <div className=\"row d-flex justify-content-center\">\r\n<input className=\"col-6 d-flex justify-content-center\" onClick={()=>{console.log(window.location.assign('/'+incremarks+'/'+detectmarks+'/'+incremarks+detectmarks))}} style={{height:\"40px\",opacity:ResultButtonOpacity,backgroundColor:\"#cd7ae5\",color:\"white\",fontWeight:\"bold\",border:\"2px solid #cd7ae5\",letterSpacing:\"3px\",fontSize:\"100%\"}} value=\"CHECK RESULTE\" type=\"button\"/>\r\n       </div>\r\n     \r\n\r\n</div>\r\n    </div>\r\n)\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React, { useState } from 'react';\r\n\r\n\r\nimport './App.css';\r\n\r\nfunction InfoForm() {\r\n  const [numstate, setnumstate] = useState(\"\")\r\n  const [levelstate, setlevelstate] = useState<string>(\"easy\")\r\n\r\nfunction QuestionNoSelection (e:any){\r\n  \r\n  if(parseInt(e.target.value)<=50){setnumstate(e.target.value)}\r\n  else{\r\n    setnumstate(\"50\")\r\n    }\r\n  \r\n  \r\n}\r\n\r\nfunction FetchData(){\r\n  if(numstate!==\"\"){\r\n  window.location.assign('/'+numstate+'/'+levelstate)\r\n  }else{\r\n    alert('please fill complete information')\r\n  }\r\n}\r\n\r\n\r\n\r\n\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"row d-none d-md-block\" style={{ backgroundColor: \"#e6edea\", height: \"100vh\", width: \"100%\", paddingTop:\"10%\",overflow: \"hidden\" }}>\r\n\r\n<div className=\"col-12 text-center align-self-center\" >\r\n  <h5 style={{ fontFamily: \"Lucida Console, Courier, monospace\",color:\"#e334c0\" }}>Online Quiz</h5>\r\n  <input type=\"number\" onChange={(e) => { QuestionNoSelection(e) }} style={{ height: \"40px\", width: \"50%\", borderBottom: \"2px solid #e334c0\", borderTop: \"0px\", borderLeft: \"0px\", borderRight: \"0px\", backgroundColor: \"#e6edea\" }} placeholder=\"Enter no of Question\" />\r\n<br/><span className=\"text-left\">Question Limit 1 to 50</span>\r\n\r\n  <br />\r\n  <select onChange={(e) => { setlevelstate(e.target.value) }} style={{ height: \"40px\", width: \"50%\", marginTop: \"1%\", borderTop: \"0px\", borderBottom: \"2px solid #e334c0\", borderLeft: \"0px\", borderRight: \"0px\", backgroundColor: \"#e6edea\" }} >\r\n    <option value=\"easy\">easy</option>\r\n    <option>hard</option>\r\n  </select>\r\n\r\n  <br />\r\n\r\n{/* <Link  to={'/'+numstate+'/'+levelstate}></Link> */}\r\n<button onClick={()=>{FetchData()}} style={{ height: \"40px\", backgroundColor: \"#e334c0\", color: \"white\", border: \"2px solid #e334c0\", width: \"50%\",fontSize:\"20px\", marginTop: \"1%\" }} >Start Quiz</button>\r\n</div>\r\n</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n<div className=\"row d-xl-none d-lg-none d-md-none\" style={{ backgroundColor: \"#e6edea\", height: \"100vh\", width: \"100%\", overflow: \"hidden\" }}>\r\n\r\n      <div className=\"col-12 text-center align-self-center\" >\r\n        <h5 style={{ fontFamily: \"Lucida Console, Courier, monospace\",color:\"#e334c0\" }}>Online Quiz</h5>\r\n        <input type=\"number\" onChange={(e) => { QuestionNoSelection(e) }} style={{ height: \"40px\", width: \"80%\", borderBottom: \"2px solid #e334c0\", borderTop: \"0px\", borderLeft: \"0px\", borderRight: \"0px\", backgroundColor: \"#e6edea\" }} placeholder=\"Enter no of Question\" />\r\n<br/><span className=\"text-left\">Question Limit 1 to 50</span>\r\n      \r\n        <br />\r\n        <select onChange={(e) => { setlevelstate(e.target.value) }} style={{ height: \"40px\", width: \"80%\", marginTop: \"1%\", borderTop: \"0px\", borderBottom: \"2px solid #e334c0\", borderLeft: \"0px\", borderRight: \"0px\", backgroundColor: \"#e6edea\" }} >\r\n          <option value=\"easy\">easy</option>\r\n          <option>hard</option>\r\n        </select>\r\n\r\n        <br />\r\n\r\n{/* <Link  to={'/'+numstate+'/'+levelstate}></Link> */}\r\n<button onClick={()=>{FetchData()}} style={{ height: \"40px\", backgroundColor: \"#e334c0\", color: \"white\", border: \"2px solid #e334c0\", width: \"80%\",fontSize:\"20px\", marginTop: \"1%\" }} >Start Quiz</button>\r\n     </div>\r\n    </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default InfoForm;\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n// import App from './App';\r\nimport { BrowserRouter as Switch, Route } from \"react-router-dom\";\r\n\r\nimport * as serviceWorker from './serviceWorker';\r\nimport {QuestionCard} from './QuestionCard'\r\nimport {ResultCard} from './ResultCard'\r\nimport InfoForm from './InfoForm'\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n<Switch>\r\n<div>\r\n\r\n<Route exact path=\"/\" component={InfoForm}/>\r\n<Route exact path=\"/:number/:level\" component={QuestionCard}/>\r\n<Route exact path=\"/:ObtainedMarks/:detectmarks/:percentage\" component={ResultCard}/>\r\n\r\n    </div>\r\n\r\n    </Switch>  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.register();\r\n","import React from 'react';\r\nimport './App.css';\r\n\r\n\r\nexport const ResultCard =(props:any)=> {\r\nlet failed \r\nconst totalvalue : number=parseInt(props.match.params.ObtainedMarks)+-parseInt(props.match.params.detectmarks)\r\nconst obtainedvalue :number=parseInt(props.match.params.ObtainedMarks)\r\nconst calculate= (obtainedvalue/totalvalue)*100\r\n\r\nif(calculate>=50){\r\n    failed=\"CONGRATULATIONS YOUE ARE PASSED THIS TEST \"\r\n}else{\r\n    failed=\"failed please try againe\"\r\n}\r\n\r\n\r\nreturn (\r\n    <div>\r\n  <div className=\"DesignCard \" style={{height:\"100vh\",width:\"100%\",overflow:\"hidden\"}}>\r\n<div className=\"container\">\r\n<div style={{marginTop:\"10%\"}} className=\"row align-self-center text-center\">\r\n<h3 className=\"col-12\" style={{letterSpacing:\"2px\",wordSpacing:\"4px\",color:\"white\"}}>{failed} </h3>\r\n</div>\r\n<div className=\"row text-center\" style={{marginTop:\"3%\"}}>\r\n<h4 style={{color:\"white\"}} className=\"col-12\">Total Marks :{totalvalue}</h4>\r\n<h4 style={{color:\"white\"}} className=\"col-12\">Obtainned Marks :{obtainedvalue}</h4>\r\n<h4 style={{color:\"white\"}} className=\"col-12\">PERCENTAGE :{calculate.toFixed(2)}</h4>\r\n</div>\r\n<div className=\"row d-flex justify-content-center \" style={{marginTop:\"3%\"}}>\r\n<input className=\"col-6 d-flex justify-content-center\" onClick={()=>{window.location.assign(\"/\")}} style={{height:\"40px\",backgroundColor:\"#cd7ae5\",color:\"white\",fontWeight:\"bold\",border:\"2px solid #cd7ae5\",letterSpacing:\"3px\",fontSize:\"20px\"}} value=\"Start Again\" type=\"button\"/>\r\n\r\n</div>\r\n</div>\r\n    </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n    <div  className=\"DesignCard d-none\" style={{height:\"100vh\",width:\"100%\",overflow:\"hidden\"}}>\r\n<div className=\"container\">\r\n<div style={{marginTop:\"10%\"}} className=\"row align-self-center text-center\">\r\n<h2 className=\"col-12\" style={{letterSpacing:\"2px\",wordSpacing:\"4px\",color:\"white\"}}>{failed} </h2>\r\n</div>\r\n<div className=\"row text-center\" style={{marginTop:\"3%\"}}>\r\n<h3 style={{color:\"white\"}} className=\"col-12\">Total Marks :{totalvalue}</h3>\r\n<h3 style={{color:\"white\"}} className=\"col-12\">Obtainned Marks :{obtainedvalue}</h3>\r\n<h3 style={{color:\"white\"}} className=\"col-12\">PERCENTAGE :{calculate.toFixed(2)}</h3>\r\n</div>\r\n<div className=\"row d-flex justify-content-center \" style={{marginTop:\"3%\"}}>\r\n<input className=\"col-4 d-flex justify-content-center\" onClick={()=>{window.location.assign(\"/\")}} style={{height:\"40px\",backgroundColor:\"#cd7ae5\",color:\"white\",fontWeight:\"bold\",border:\"2px solid #cd7ae5\",letterSpacing:\"3px\",fontSize:\"100%\"}} value=\"Start Again\" type=\"button\"/>\r\n\r\n</div>\r\n</div>\r\n    </div>\r\n    </div>\r\n)\r\n}\r\n\r\n  \r\n\r\n\r\n\r\n\r\n\r\n\r\n"],"sourceRoot":""}